pipeline {
    agent any

    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-credentials')  // Set this in Jenkins credentials
        DOCKERHUB_REPO = 'yourdockerhubusername/collaborative-form-system'
        EC2_USER = 'ec2-user'
        EC2_HOST = 'your-ec2-public-ip'
        EC2_KEY = credentials('ec2-ssh-key')  // Private key credential ID in Jenkins
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'üì• Checking out source code...'
                checkout scm
            }
        }

        stage('Build Backend') {
            steps {
                dir('backend') {
                    echo 'üì¶ Installing backend dependencies...'
                    sh 'npm install'
                    echo '‚öôÔ∏è Building backend...'
                    sh 'npm run build || echo "No build script found, skipping..."'
                }
            }
        }

        stage('Build Frontend') {
            steps {
                dir('frontend') {
                    echo 'üì¶ Installing frontend dependencies...'
                    sh 'npm install'
                    echo '‚öôÔ∏è Building frontend...'
                    sh 'npm run build'
                }
            }
        }

        stage('Docker Login') {
            steps {
                echo 'üîê Logging into DockerHub...'
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
            }
        }

        stage('Build & Push Images') {
            steps {
                script {
                    echo 'üê≥ Building Docker images...'
                    sh 'docker build -t $DOCKERHUB_REPO-backend ./backend'
                    sh 'docker build -t $DOCKERHUB_REPO-frontend ./frontend'

                    echo 'üì§ Pushing images to DockerHub...'
                    sh 'docker push $DOCKERHUB_REPO-backend'
                    sh 'docker push $DOCKERHUB_REPO-frontend'
                }
            }
        }

        stage('Deploy to EC2') {
            steps {
                echo 'üöÄ Deploying on EC2 via SSH...'
                script {
                    sh """
                    ssh -o StrictHostKeyChecking=no -i $EC2_KEY $EC2_USER@$EC2_HOST '
                        docker pull $DOCKERHUB_REPO-backend &&
                        docker pull $DOCKERHUB_REPO-frontend &&
                        cd /home/$EC2_USER/app &&
                        docker compose down &&
                        docker compose up -d
                    '
                    """
                }
            }
        }
    }

    post {
        success {
            echo '‚úÖ Deployment successful!'
            sh 'docker logout'
        }
        failure {
            echo '‚ùå Pipeline failed. Check logs for details.'
            sh 'docker logout || true'
        }
    }
}
